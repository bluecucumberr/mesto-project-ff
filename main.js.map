{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EAAeC,SAASC,cAAc,kBAAkBC,QAEvD,SAASC,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcb,EAAaE,cAAc,SAASY,WAAU,GAC5DC,EAAUF,EAAYX,cAAc,gBAE1CW,EAAYG,aAAa,UAAWX,EAASY,KAE7CF,EAAQG,IAAMb,EAASc,KACvBN,EAAYX,cAAc,gBAAgBkB,YAAcf,EAASgB,KACjEN,EAAQO,IAAMjB,EAASgB,KAEHR,EAAYX,cAAc,qBAClCkB,YAAcf,EAASkB,MAAMC,OAEzC,IAAMC,EAAeZ,EAAYX,cAAc,wBAC3CG,EAASqB,MAAMT,MAAQR,EACzBgB,EAAaE,SAEbF,EAAaG,iBAAiB,SAAS,SAACC,GAAG,OACzCvB,EAAWuB,EAAKnB,EAAgB,IAIpC,IAAMoB,EAAajB,EAAYX,cAAc,sBAiB7C,OAfqBG,EAASkB,MAAMQ,MAClC,SAACC,GAAI,OAAKA,EAAKf,MAAQR,CAAa,KAGpCqB,EAAWG,UAAUC,IAAI,+BAG3BJ,EAAWF,iBAAiB,SAAS,SAACC,GACpCtB,EAASsB,EAAKlB,EAAeC,EAC/B,IAEAG,EAAQa,iBAAiB,SAAS,kBAChCpB,EAAeO,EAAQG,IAAKH,EAAQO,IAAI,IAGnCT,CACT,CAEO,SAASP,EAAWuB,EAAKnB,GAC9B,IAAMG,EAAcgB,EAAIM,OAAOC,QAAQ,SAGvC1B,EAFeG,EAAYwB,aAAa,YAEhBC,MAAK,WAC3BzB,EAAYc,QACd,GACF,CAEO,SAASpB,EAASsB,EAAKlB,EAAeC,GAC3C,IAAMC,EAAcgB,EAAIM,OAAOC,QAAQ,SACjCG,EAAS1B,EAAYwB,aAAa,WAClCP,EAAaD,EAAIM,OACjBK,EAAc3B,EAAYX,cAAc,qBAE1C4B,EAAWG,UAAUQ,SAAS,+BAChC7B,EAAiB2B,GAAQD,MAAK,SAACI,GAC7BZ,EAAWG,UAAUN,OAAO,+BAC5Ba,EAAYpB,YAAcsB,EAAYnB,MAAMC,MAC9C,IAEAb,EAAc4B,GAAQD,MAAK,SAACI,GAC1BZ,EAAWG,UAAUC,IAAI,+BACzBM,EAAYpB,YAAcsB,EAAYnB,MAAMC,MAC9C,GAEJ,CC/EO,SAASmB,EAAUC,EAAcC,GACb,mBAAZA,GACPA,IAEJD,EAAaX,UAAUC,IAAI,mBAC3BjC,SAAS2B,iBAAiB,UAAWkB,GACrC7C,SAAS2B,iBAAiB,YAAamB,EAC3C,CAEO,SAASC,EAAWJ,IACvBA,EAAe3C,SAASC,cAAc,uBAElC0C,EAAaX,UAAUN,OAAO,mBAC9B1B,SAASgD,oBAAoB,UAAWH,GACxC7C,SAASgD,oBAAoB,YAAaF,GAElD,CAEO,SAASG,IACZ,IAAMC,EAAclD,SAASC,cAAc,oBACnCiD,GACIH,EAAWG,EAE3B,CAEA,SAASL,EAAaM,GACA,WAAdA,EAAMC,KACNH,GAER,CAEA,SAASH,EAAoBK,GACzB,GAAIA,EAAMjB,OAAOF,UAAUQ,SAAS,SAAU,CAC1C,IAAMU,EAAclD,SAASC,cAAc,oBACvCiD,GACAH,EAAWG,EAEnB,CACJ,CCtCO,IA4BCG,EAAqB,SAACC,EAAaC,EAAWC,EAAcC,EAAiBC,GACjF,IAAMC,EAAYL,EAAYrD,cAAc,IAAD2D,OAAKL,EAAUnC,KAAI,iBAC9DmC,EAAUvB,UAAUC,IAAIwB,GACxBE,EAAUxC,YAAcqC,EACxBG,EAAU3B,UAAUC,IAAIyB,EAC1B,EAEMG,EAAwB,SAACP,EAAaC,EAAWE,EAAiBC,GACtE,IAAMC,EAAYL,EAAYrD,cAAc,IAAD2D,OAAKL,EAAUnC,KAAI,iBAC9DmC,EAAUvB,UAAUN,OAAO+B,GAC3BE,EAAU3B,UAAUN,OAAOgC,GAC3BC,EAAUxC,YAAc,EAC1B,EAEM2C,EAAmB,SAACC,EAAWC,EAAeC,GAC9CC,EAAgBH,IAClBC,EAAcG,UAAW,EACzBH,EAAchC,UAAUC,IAAIgC,KAE5BD,EAAcG,UAAW,EACzBH,EAAchC,UAAUN,OAAOuC,GAEnC,EAEMC,EAAkB,SAACH,GACvB,OAAOA,EAAUjC,MAAK,SAACyB,GACrB,OAAQA,EAAUa,SAASC,KAC7B,GACF,ECxDIC,EAAO,4CACPC,EAAa,uCAEbC,EAAiB,SAACC,GACtB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAADjB,OAAYa,EAAIK,QACvC,EAeaC,EAAc,WACzB,OAAOC,MAAMV,EAAO,YAAa,CAC/BW,OAAQ,MACRC,QAAS,CACPC,cAAeZ,KAGhBlC,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,4CAA6CF,EAC3D,GACJ,EAmDa5E,EAAkB,SAAC6B,GAC9B,OAAO0C,MAAMV,EAAO,UAAHV,OAAatB,GAAU,CACtC2C,OAAQ,SACRC,QAAS,CACPC,cAAeZ,KAGhBlC,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAkCF,EAChD,GACJ,EAEa3E,EAAgB,SAAC4B,GAC5B,OAAO0C,MAAMV,EAAO,gBAAHV,OAAmBtB,GAAU,CAC5C2C,OAAQ,MACRC,QAAS,CACPC,cAAeZ,KAGhBlC,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,gCAAiCF,EAC/C,GACJ,EAEa1E,EAAmB,SAAC2B,GAC/B,OAAO0C,MAAMV,EAAO,gBAAHV,OAAmBtB,GAAU,CAC5C2C,OAAQ,SACRC,QAAS,CACPC,cAAeZ,KAGhBlC,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,4BAA6BF,EAC3C,GACJ,E,sGCzGArF,SAAS2B,iBAAiB,oBAAoB,WAC5CoD,IAAc1C,MAAK,SAACmD,GACGxF,SAASC,cAAc,mBAC/BwF,MAAMC,gBAAkB,OAAH9B,OAAU4B,EAASG,OAAM,KAE3DC,EAAYzE,YAAcqE,EAASpE,KACnCyE,EAAmB1E,YAAcqE,EAASM,MAC1CC,EAAUC,MAAQR,EAASpE,KAC3B6E,EAASD,MAAQR,EAASM,KAC5B,GACF,IAGA,IAAMI,EAAiBlG,SAASC,cAAc,iBAC9C2E,QAAQuB,IAAI,CDpBHnB,MAAMV,EAAO,SAAU,CAC5BW,OAAQ,MACRC,QAAS,CACPC,cAAeZ,KAGhBlC,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAkCF,EAChD,ICW4BN,MAAgB1C,MAC9C,SAAA+D,GAA2B,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAAzBE,EAASD,EAAA,GACH7F,EADa6F,EAAA,GACYrF,IAE/BsF,EAAUC,SAAQ,SAACC,GACjB,IAAM5F,EAAcT,EAClBqG,EACAnG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEFuF,EAAeO,OAAO7F,EACxB,GACF,IAIF,IAAM8F,EAAY1G,SAASC,cAAc,oBACnC0G,EAAW3G,SAASC,cAAc,wBAClC2G,EAAoB5G,SAASC,cAAc,6BAG3C4G,EAAa7G,SAASC,cAAc,yBACpC6G,EAAY9G,SAASC,cAAc,wBACnC8G,EAAoB/G,SAASgH,iBAAiB,iBAC9CC,EAAejH,SAASC,cAAc,mBAGtCiH,EAAkBlH,SAASmH,MAAM,gBACjCC,EAAiBpH,SAASmH,MAAM,aAChCE,EAA0BrH,SAASmH,MAAM,iBAEzCpB,EAAYmB,EAAgBjH,cAAc,2BAC1CgG,EAAWiB,EAAgBjH,cAC/B,kCAEI2F,EAAc5F,SAASC,cAAc,mBACrC4F,EAAqB7F,SAASC,cAAc,yBAE5CqH,EAAaF,EAAenH,cAAc,gCAC1CsH,EAAeH,EAAenH,cAAc,0BAE5CuH,EAAiBH,EAAwBpH,cAC7C,0BA0CF,SAAS2C,IACPmD,EAAUC,MAAQJ,EAAYzE,YAC9B8E,EAASD,MAAQH,EAAmB1E,WACtC,CAzCA0F,EAAWlF,iBAAiB,SAAS,WACnCe,EAAUgE,EAAW9D,GACrB6E,EAAgBf,EAAW,CACzBgB,cAAe,gBACfC,qBAAsB,iBACtB1D,oBAAqB,0BAEzB,IAEA6C,EAAUnF,iBAAiB,SAAS,WAClCe,EAAUiE,GACVc,EAAgBd,EAAU,CACxBe,cAAe,gBACfC,qBAAsB,iBACtB1D,oBAAqB,2BAEvBqD,EAAWtB,MAAQ,GACnBuB,EAAavB,MAAQ,GACvB,IAEAiB,EAAatF,iBAAiB,SAAS,WACrCe,EAAUkE,GACVa,EAAgBb,EAAmB,CACjCc,cAAe,gBACfC,qBAAsB,iBACtB1D,oBAAqB,2BAEvBuD,EAAexB,MAAQ,EACzB,IAEAe,EAAkBR,SAAQ,SAACqB,GACzBA,EAAOjG,iBAAiB,QAASoB,EACnC,IAEAmE,EAAgBvF,iBAAiB,UA8BjC,SAA2BwB,GACzBA,EAAM0E,iBAEN,IDjHwBzG,EAAM0E,ECiHxBgC,EAAU/B,EAAUC,MACpB+B,EAAiB9B,EAASD,MAE1BgC,EAAa7E,EAAMjB,OAAOjC,cAAc,kBAC9CgI,EAAeD,EAAY,iBAAiB,IDrHpB5G,ECuHd0G,EDvHoBhC,ECuHXiC,EDtHZ/C,MAAMV,EAAO,YAAa,CAC/BW,OAAQ,QACRC,QAAS,CACPC,cAAeZ,EACf,eAAgB,oBAElB2D,KAAMC,KAAKC,UAAU,CACnBhH,KAAMA,EACN0E,MAAOA,MAGRzD,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,EACjD,KCwGiChD,MAAK,SAACgG,GACvCzC,EAAYzE,YAAckH,EAAKjH,KAC/ByE,EAAmB1E,YAAckH,EAAKvC,MAEtCmC,EAAeD,EAAY,aAAa,GAExC/E,GACF,GACF,IA9CAmE,EAAezF,iBAAiB,UAgDhC,SAA6BwB,GAC3BA,EAAM0E,iBAEN,IDlHyBzH,ECkHnBkI,EAAYhB,EAAWtB,MACvBuC,EAAahB,EAAavB,MAE1BgC,EAAa7E,EAAMjB,OAAOjC,cAAc,kBAC9CgI,EAAeD,EAAY,iBAAiB,IDtHnB5H,ECwHR,CAAEgB,KAAMkH,EAAWpH,KAAMqH,GDvHnCvD,MAAMV,EAAO,SAAU,CAC5BW,OAAQ,OACRC,QAAS,CACPC,cAAeZ,EACf,eAAgB,oBAElB2D,KAAMC,KAAKC,UAAU,CACnBhH,KAAMhB,EAASgB,KACfF,KAAMd,EAASc,SAGhBmB,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,mCAAoCF,EAClD,KC0GmBhD,MAAK,SAACgG,GACzB,IAAMzH,EAAcT,EAAWkI,EAAMhI,EAAYC,EAAUC,GAC3D2F,EAAesC,QAAQ5H,GACvBwG,EAAeqB,QAEfR,EAAeD,EAAY,aAAa,GAExC/E,GACF,GACF,IApDA,IAAMyF,EAAa1I,SAASC,cAAc,mCACpC0I,EAAe3I,SAASC,cAC5B,qCAGF,SAASM,EAAeqI,EAAUC,GAKhCnG,EAJqB1C,SAASC,cAAc,sBAC5C,YAdF,SAA2B2I,EAAUC,GACnCH,EAAWzH,IAAM2H,EACjBF,EAAWrH,IAAMwH,EACjBF,EAAaxH,YAAc0H,CAC7B,CAWIC,CAAkBF,EAAUC,EAC9B,GAEF,CA6DA,SAASZ,EAAeL,EAAQmB,EAAMC,GACpCpB,EAAOzG,YAAc4H,EACrBnB,EAAOzD,SAAW6E,CACpB,CArBA3B,EAAwB1F,iBAAiB,UAAU,SAACwB,GAClDA,EAAM0E,iBAEN,IDjE2BoB,ECiErBC,EAAe1B,EAAexB,MAE9BgC,EAAa7E,EAAMjB,OAAOjC,cAAc,kBAC9CgI,EAAeD,EAAY,iBAAiB,IDpEjBiB,ECsEdC,EDrENlE,MAAMV,EAAO,mBAAoB,CACtCW,OAAQ,QACRC,QAAS,CACPC,cAAeZ,EACf,eAAgB,oBAElB2D,KAAMC,KAAKC,UAAU,CAAEzC,OAAQsD,MAE9B5G,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,EACjD,KC0DyBhD,MAAK,SAACgG,GACVrI,SAASC,cAAc,mBAC/BwF,MAAMC,gBAAkB,OAAH9B,OAAUyE,EAAK1C,OAAM,KAEvDsC,EAAeD,EAAY,aAAa,GAExC/E,GACF,GACF,IAQA,IAAsBkG,EACpBC,EACA1B,EACAC,EACA1D,EACAR,EACAC,EAgBI+D,EAAkB,SACtBnE,EAAW+F,GAER,IADD3B,EAAa2B,EAAb3B,cAAeC,EAAoB0B,EAApB1B,qBAAsB1D,EAAmBoF,EAAnBpF,oBAEjCF,EAAYuF,MAAMC,KAAKjG,EAAY0D,iBAAiBU,IACpD1D,EAAgBV,EAAYrD,cAAc0H,GAEhD5D,EAAUwC,SAAQ,SAAChD,GACjB,IAAMI,EAAYL,EAAYrD,cAAc,IAAD2D,OACrCL,EAAUnC,KAAI,iBAEpBmC,EAAUvB,UAAUN,OAAO,2BAC3BiC,EAAUxC,YAAc,GACxBwC,EAAU3B,UAAUN,OAAO,qBAC7B,IAEAsC,EAAcG,UAAW,EACzBH,EAAchC,UAAUC,IAAIgC,EAC9B,EAvCEmF,GADoBD,EA0CL,CACfC,aAAc,eACd1B,cAAe,gBACfC,qBAAsB,iBACtB1D,oBAAqB,yBACrBR,gBAAiB,0BACjBC,WAAY,uBA/CZ0F,aACA1B,EAAayB,EAAbzB,cACAC,EAAoBwB,EAApBxB,qBACA1D,EAAmBkF,EAAnBlF,oBACAR,EAAe0F,EAAf1F,gBACAC,EAAUyF,EAAVzF,WAEiB4F,MAAMC,KAAKvJ,SAASgH,iBAAiBoC,IAE7C7C,SAAQ,SAACjD,IF5Na,SAACA,EAAaoE,EAAeC,EAAsB1D,EAAqBR,EAAiBC,GACtH,IAAMK,EAAYuF,MAAMC,KAAKjG,EAAY0D,iBAAiBU,IACpD1D,EAAgBV,EAAYrD,cAAc0H,GAEhD7D,EAAiBC,EAAWC,EAAeC,GAE3CF,EAAUwC,SAAQ,SAAChD,GACjBA,EAAU5B,iBAAiB,SAAS,YAOnB,SAAC2B,EAAaC,EAAWE,EAAiBC,GACzDH,EAAUa,SAASoF,gBACrBjG,EAAUkG,kBAAkBlG,EAAUmG,QAAQlG,cAE9CD,EAAUkG,kBAAkB,IAGzBlG,EAAUa,SAASC,MAGtBR,EAAsBP,EAAaC,EAAWE,EAAiBC,GAF/DL,EAAmBC,EAAaC,EAAWA,EAAUoG,kBAAmBlG,EAAiBC,EAI7F,EAlBMkG,CAAatG,EAAaC,EAAWE,EAAiBC,GACtDI,EAAiBC,EAAWC,EAAeC,EAC7C,GACF,GACF,CEiNE4F,CACEvG,EACAoE,EACAC,EACA1D,EACAR,EACAC,EAEJ,ID5JOsB,MAAMV,EAAO,SAAU,CAC5BW,OAAQ,MACRC,QAAS,CACPC,cAAeZ,KAGhBlC,KAAKmC,GACLY,OAAM,SAACC,GACNC,QAAQC,IAAI,+BAAgCF,EAC9C,ICmLShD,MAAK,SAACgG,GACjB,IAAMyB,EAAQ9J,SAASgH,iBAAiB,SAExCqB,EAAK9B,SAAQ,SAACC,GACZsD,EAAMvD,SAAQ,SAACwD,GACTA,EAAK3H,aAAa,aAAeoE,EAAKxF,MACpB+I,EAAK9J,cAAc,qBAC3BkB,YAAcqF,EAAKlF,MAAMC,OAEzC,GACF,GACF,G","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nexport function createCard(\r\n  cardData,\r\n  deleteCard,\r\n  likeCard,\r\n  openImagePopup,\r\n  currentUserId,\r\n  deleteCardFetch,\r\n  likeCardFetch,\r\n  dislikeCardFetch\r\n) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImg = cardElement.querySelector(\".card__image\");\r\n\r\n  cardElement.setAttribute(\"data-id\", cardData._id);\r\n\r\n  cardImg.src = cardData.link;\r\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\r\n  cardImg.alt = cardData.name;\r\n\r\n  const likeCounter = cardElement.querySelector(\".card__like-count\");\r\n  likeCounter.textContent = cardData.likes.length;\r\n\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  if (cardData.owner._id !== currentUserId) {\r\n    deleteButton.remove();\r\n  } else {\r\n    deleteButton.addEventListener(\"click\", (evt) =>\r\n      deleteCard(evt, deleteCardFetch)\r\n    );\r\n  }\r\n\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n\r\n  const hasUserLiked = cardData.likes.some(\r\n    (user) => user._id === currentUserId\r\n  );\r\n  if (hasUserLiked) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  likeButton.addEventListener(\"click\", (evt) => {\r\n    likeCard(evt, likeCardFetch, dislikeCardFetch);\r\n  });\r\n\r\n  cardImg.addEventListener(\"click\", () =>\r\n    openImagePopup(cardImg.src, cardImg.alt)\r\n  );\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function deleteCard(evt, deleteCardFetch) {\r\n  const cardElement = evt.target.closest(\".card\");\r\n  const cardId = cardElement.getAttribute(\"data-id\");\r\n\r\n  deleteCardFetch(cardId).then(() => {\r\n    cardElement.remove();\r\n  });\r\n}\r\n\r\nexport function likeCard(evt, likeCardFetch, dislikeCardFetch) {\r\n  const cardElement = evt.target.closest(\".card\");\r\n  const cardId = cardElement.getAttribute(\"data-id\");\r\n  const likeButton = evt.target;\r\n  const likeCounter = cardElement.querySelector(\".card__like-count\");\r\n\r\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n    dislikeCardFetch(cardId).then((updatedCard) => {\r\n      likeButton.classList.remove(\"card__like-button_is-active\");\r\n      likeCounter.textContent = updatedCard.likes.length;\r\n    });\r\n  } else {\r\n    likeCardFetch(cardId).then((updatedCard) => {\r\n      likeButton.classList.add(\"card__like-button_is-active\");\r\n      likeCounter.textContent = updatedCard.likes.length;\r\n    });\r\n  }\r\n}\r\n","export function openModal(popupElement, preFill) {\r\n    if (typeof preFill === 'function') {\r\n        preFill();\r\n    }  \r\n    popupElement.classList.add('popup_is-opened');\r\n    document.addEventListener('keydown', handleEscKey);\r\n    document.addEventListener('mousedown', handleOverlayClick);\r\n}\r\n\r\nexport function closeModal(popupElement) {\r\n    popupElement = document.querySelector('.popup_is-opened');\r\n    if (popupElement) {\r\n        popupElement.classList.remove('popup_is-opened');\r\n        document.removeEventListener('keydown', handleEscKey);\r\n        document.removeEventListener('mousedown', handleOverlayClick);\r\n    }\r\n}\r\n\r\nexport function defineAndCloseOpenedPopup () {\r\n    const openedPopup = document.querySelector('.popup_is-opened');\r\n        if (openedPopup) {\r\n                closeModal(openedPopup);\r\n            }\r\n}\r\n\r\nfunction handleEscKey(event) {\r\n    if (event.key === \"Escape\") {\r\n        defineAndCloseOpenedPopup ();\r\n    }\r\n}\r\n\r\nfunction handleOverlayClick (event) {\r\n    if (event.target.classList.contains('popup')) {\r\n        const openedPopup = document.querySelector('.popup_is-opened');\r\n        if (openedPopup) {\r\n            closeModal(openedPopup);\r\n        }\r\n    }\r\n}\r\n","export const setEventListeners = (formElement, inputSelector, submitButtonSelector, inactiveButtonClass, inputErrorClass, errorClass) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n    const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  \r\n    toggleSaveButton(inputList, buttonElement, inactiveButtonClass);\r\n  \r\n    inputList.forEach((formInput) => {\r\n      formInput.addEventListener(\"input\", () => {\r\n        isValidInput(formElement, formInput, inputErrorClass, errorClass);\r\n        toggleSaveButton(inputList, buttonElement, inactiveButtonClass);\r\n      });\r\n    });\r\n  };\r\n  \r\n  const isValidInput = (formElement, formInput, inputErrorClass, errorClass) => {\r\n    if (formInput.validity.patternMismatch) {\r\n      formInput.setCustomValidity(formInput.dataset.errorMessage);\r\n    } else {\r\n      formInput.setCustomValidity(\"\");\r\n    }\r\n  \r\n    if (!formInput.validity.valid) {\r\n      addInputErrorClass(formElement, formInput, formInput.validationMessage, inputErrorClass, errorClass);\r\n    } else {\r\n      removeInputErrorClass(formElement, formInput, inputErrorClass, errorClass);\r\n    }\r\n  };\r\n  \r\n  const addInputErrorClass = (formElement, formInput, errorMessage, inputErrorClass, errorClass) => {\r\n    const formError = formElement.querySelector(`.${formInput.name}-input-error`);\r\n    formInput.classList.add(inputErrorClass);\r\n    formError.textContent = errorMessage;\r\n    formError.classList.add(errorClass);\r\n  };\r\n  \r\n  const removeInputErrorClass = (formElement, formInput, inputErrorClass, errorClass) => {\r\n    const formError = formElement.querySelector(`.${formInput.name}-input-error`);\r\n    formInput.classList.remove(inputErrorClass);\r\n    formError.classList.remove(errorClass);\r\n    formError.textContent = \"\";\r\n  };\r\n  \r\n  const toggleSaveButton = (inputList, buttonElement, inactiveButtonClass) => {\r\n    if (hasInvalidInput(inputList)) {\r\n      buttonElement.disabled = true;\r\n      buttonElement.classList.add(inactiveButtonClass);\r\n    } else {\r\n      buttonElement.disabled = false;\r\n      buttonElement.classList.remove(inactiveButtonClass);\r\n    }\r\n  };\r\n  \r\n  const hasInvalidInput = (inputList) => {\r\n    return inputList.some((formInput) => {\r\n      return !formInput.validity.valid;\r\n    });\r\n  };","const PATH = \"https://nomoreparties.co/v1/wff-cohort-23\";\r\nconst AUTH_TOKEN = \"d4ecec0a-dd8c-4dd9-8d53-afee648696a4\";\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(PATH + \"/cards\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n    },\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при загрузке карточек: \", err);\r\n    });\r\n};\r\n\r\nexport const getUserData = () => {\r\n  return fetch(PATH + \"/users/me\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n    },\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при загрузке данных пользователя: \", err);\r\n    });\r\n};\r\n\r\nexport const patchUser = (name, about) => {\r\n  return fetch(PATH + \"/users/me\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при обновлении профиля: \", err);\r\n    });\r\n};\r\n\r\nexport const addNewCard = (cardData) => {\r\n  return fetch(PATH + \"/cards\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: cardData.name,\r\n      link: cardData.link,\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при добавлении карточки: \", err);\r\n    });\r\n};\r\n\r\nexport const countLikes = () => {\r\n  return fetch(PATH + \"/cards\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n    },\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при подсчете лайков: \", err);\r\n    });\r\n};\r\n\r\nexport const deleteCardFetch = (cardId) => {\r\n  return fetch(PATH + `/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n    },\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при удалении карточки: \", err);\r\n    });\r\n};\r\n\r\nexport const likeCardFetch = (cardId) => {\r\n  return fetch(PATH + `/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n    },\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при постановке лайка: \", err);\r\n    });\r\n};\r\n\r\nexport const dislikeCardFetch = (cardId) => {\r\n  return fetch(PATH + `/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n    },\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при снятии лайка: \", err);\r\n    });\r\n};\r\n\r\nexport const updateAvatar = (avatarUrl) => {\r\n  return fetch(PATH + \"/users/me/avatar\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: AUTH_TOKEN,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ avatar: avatarUrl }),\r\n  })\r\n    .then(handleResponse)\r\n    .catch((err) => {\r\n      console.log(\"Ошибка при обновлении аватара: \", err);\r\n    });\r\n};\r\n","import \"/src/pages/index.css\";\r\nimport { createCard, deleteCard, likeCard } from \"./card.js\";\r\nimport { openModal, closeModal, defineAndCloseOpenedPopup } from \"./modal.js\";\r\nimport { setEventListeners } from \"./validation.js\";\r\nimport {\r\n  getInitialCards,\r\n  getUserData,\r\n  patchUser,\r\n  addNewCard,\r\n  countLikes,\r\n  deleteCardFetch,\r\n  likeCardFetch,\r\n  dislikeCardFetch,\r\n  updateAvatar,\r\n} from \"./api.js\";\r\n\r\n// отображение данных профиля с сервера\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  getUserData().then((userData) => {\r\n    const profileImage = document.querySelector(\".profile__image\");\r\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n\r\n    nameDisplay.textContent = userData.name;\r\n    descriptionDisplay.textContent = userData.about;\r\n    nameInput.value = userData.name;\r\n    jobInput.value = userData.about;\r\n  });\r\n});\r\n\r\n//вывод каторчек на экран\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\nPromise.all([getInitialCards(), getUserData()]).then(\r\n  ([cardsData, userData]) => {\r\n    const currentUserId = userData._id;\r\n\r\n    cardsData.forEach((item) => {\r\n      const cardElement = createCard(\r\n        item,\r\n        deleteCard,\r\n        likeCard,\r\n        openImagePopup,\r\n        currentUserId,\r\n        deleteCardFetch,\r\n        likeCardFetch,\r\n        dislikeCardFetch\r\n      );\r\n      cardsContainer.append(cardElement);\r\n    });\r\n  }\r\n);\r\n\r\n//попапы\r\nconst editPopup = document.querySelector(\".popup_type_edit\");\r\nconst addPopup = document.querySelector(\".popup_type_new-card\");\r\nconst updateAvatarPopup = document.querySelector(\".popup_type_update-avatar\");\r\n\r\n//кнопки\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst closePopupButtons = document.querySelectorAll(\".popup__close\");\r\nconst updateButton = document.querySelector(\".profile__image\");\r\n\r\n//элементы для работы с формой\r\nconst formEditElement = document.forms[\"edit-profile\"];\r\nconst formAddElement = document.forms[\"new-place\"];\r\nconst formUpdateAvatarElenemt = document.forms[\"update-avatar\"];\r\n\r\nconst nameInput = formEditElement.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formEditElement.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\nconst nameDisplay = document.querySelector(\".profile__title\");\r\nconst descriptionDisplay = document.querySelector(\".profile__description\");\r\n\r\nconst placeInput = formAddElement.querySelector(\".popup__input_type_card-name\");\r\nconst urlCardInput = formAddElement.querySelector(\".popup__input_type_url\");\r\n\r\nconst urlAvatarInput = formUpdateAvatarElenemt.querySelector(\r\n  \".popup__input_type_url\"\r\n);\r\n\r\n//обработчики событий\r\neditButton.addEventListener(\"click\", () => {\r\n  openModal(editPopup, preFill);\r\n  clearValidation(editPopup, {\r\n    inputSelector: \".popup__input\",\r\n    submitButtonSelector: \".popup__button\",\r\n    inactiveButtonClass: \"popup__button_inactive\",\r\n  });\r\n});\r\n\r\naddButton.addEventListener(\"click\", () => {\r\n  openModal(addPopup);\r\n  clearValidation(addPopup, {\r\n    inputSelector: \".popup__input\",\r\n    submitButtonSelector: \".popup__button\",\r\n    inactiveButtonClass: \"popup__button_inactive\",\r\n  });\r\n  placeInput.value = \"\";\r\n  urlCardInput.value = \" \";\r\n});\r\n\r\nupdateButton.addEventListener(\"click\", () => {\r\n  openModal(updateAvatarPopup);\r\n  clearValidation(updateAvatarPopup, {\r\n    inputSelector: \".popup__input\",\r\n    submitButtonSelector: \".popup__button\",\r\n    inactiveButtonClass: \"popup__button_inactive\",\r\n  });\r\n  urlAvatarInput.value = \"\";\r\n});\r\n\r\nclosePopupButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", closeModal);\r\n});\r\n\r\nformEditElement.addEventListener(\"submit\", handleProfileForm);\r\nformAddElement.addEventListener(\"submit\", handleFormAddSubmit);\r\n\r\n//заполнение по умолчанию\r\nfunction preFill() {\r\n  nameInput.value = nameDisplay.textContent;\r\n  jobInput.value = descriptionDisplay.textContent;\r\n}\r\n\r\nfunction preFillImagePopup(imageSrc, imageAlt) {\r\n  popupImage.src = imageSrc;\r\n  popupImage.alt = imageAlt;\r\n  popupCaption.textContent = imageAlt;\r\n}\r\n\r\n//открытие попапа карточки\r\nconst popupImage = document.querySelector(\".popup_type_image .popup__image\");\r\nconst popupCaption = document.querySelector(\r\n  \".popup_type_image .popup__caption\"\r\n);\r\n\r\nfunction openImagePopup(imageSrc, imageAlt) {\r\n  const popupElement = document.querySelector(\".popup_type_image\");\r\n  function preFill() {\r\n    preFillImagePopup(imageSrc, imageAlt);\r\n  }\r\n  openModal(popupElement, preFill);\r\n}\r\n\r\n//обработка кнопок \"сохранить\" в формах\r\nfunction handleProfileForm(event) {\r\n  event.preventDefault();\r\n\r\n  const newName = nameInput.value;\r\n  const newDescription = jobInput.value;\r\n\r\n  const saveButton = event.target.querySelector(\".popup__button\");\r\n  setButtonState(saveButton, \"Сохранение...\", true);\r\n\r\n  patchUser(newName, newDescription).then((data) => {\r\n    nameDisplay.textContent = data.name;\r\n    descriptionDisplay.textContent = data.about;\r\n\r\n    setButtonState(saveButton, \"Сохранить\", false);\r\n\r\n    defineAndCloseOpenedPopup();\r\n  });\r\n}\r\n\r\nfunction handleFormAddSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  const cardTitle = placeInput.value;\r\n  const cardImgUrl = urlCardInput.value;\r\n\r\n  const saveButton = event.target.querySelector(\".popup__button\");\r\n  setButtonState(saveButton, \"Сохранение...\", true);\r\n\r\n  const cardData = { name: cardTitle, link: cardImgUrl };\r\n  addNewCard(cardData).then((data) => {\r\n    const cardElement = createCard(data, deleteCard, likeCard, openImagePopup);\r\n    cardsContainer.prepend(cardElement);\r\n    formAddElement.reset();\r\n\r\n    setButtonState(saveButton, \"Сохранить\", false);\r\n\r\n    defineAndCloseOpenedPopup();\r\n  });\r\n}\r\n\r\nformUpdateAvatarElenemt.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n\r\n  const newAvatarUrl = urlAvatarInput.value;\r\n\r\n  const saveButton = event.target.querySelector(\".popup__button\");\r\n  setButtonState(saveButton, \"Сохранение...\", true);\r\n\r\n  updateAvatar(newAvatarUrl).then((data) => {\r\n    const profileImage = document.querySelector(\".profile__image\");\r\n    profileImage.style.backgroundImage = `url(${data.avatar})`;\r\n\r\n    setButtonState(saveButton, \"Сохранить\", false);\r\n\r\n    defineAndCloseOpenedPopup();\r\n  });\r\n});\r\n\r\nfunction setButtonState(button, text, isDisabled) {\r\n  button.textContent = text;\r\n  button.disabled = isDisabled;\r\n}\r\n\r\n//Валидация форм\r\nconst enableValidation = ({\r\n  formSelector,\r\n  inputSelector,\r\n  submitButtonSelector,\r\n  inactiveButtonClass,\r\n  inputErrorClass,\r\n  errorClass,\r\n}) => {\r\n  const formList = Array.from(document.querySelectorAll(formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(\r\n      formElement,\r\n      inputSelector,\r\n      submitButtonSelector,\r\n      inactiveButtonClass,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  });\r\n};\r\n\r\nconst clearValidation = (\r\n  formElement,\r\n  { inputSelector, submitButtonSelector, inactiveButtonClass }\r\n) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n\r\n  inputList.forEach((formInput) => {\r\n    const formError = formElement.querySelector(\r\n      `.${formInput.name}-input-error`\r\n    );\r\n    formInput.classList.remove(\"popup__input_type_error\");\r\n    formError.textContent = \"\";\r\n    formError.classList.remove(\"popup__input-error\");\r\n  });\r\n\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(inactiveButtonClass);\r\n};\r\n\r\nenableValidation({\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_inactive\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__input-error\",\r\n});\r\n\r\ncountLikes().then((data) => {\r\n  const cards = document.querySelectorAll(\".card\");\r\n\r\n  data.forEach((item) => {\r\n    cards.forEach((card) => {\r\n      if (card.getAttribute(\"data-id\") === item._id) {\r\n        const likeCounter = card.querySelector(\".card__like-count\");\r\n        likeCounter.textContent = item.likes.length;\r\n      }\r\n    });\r\n  });\r\n});\r\n"],"names":["cardTemplate","document","querySelector","content","createCard","cardData","deleteCard","likeCard","openImagePopup","currentUserId","deleteCardFetch","likeCardFetch","dislikeCardFetch","cardElement","cloneNode","cardImg","setAttribute","_id","src","link","textContent","name","alt","likes","length","deleteButton","owner","remove","addEventListener","evt","likeButton","some","user","classList","add","target","closest","getAttribute","then","cardId","likeCounter","contains","updatedCard","openModal","popupElement","preFill","handleEscKey","handleOverlayClick","closeModal","removeEventListener","defineAndCloseOpenedPopup","openedPopup","event","key","addInputErrorClass","formElement","formInput","errorMessage","inputErrorClass","errorClass","formError","concat","removeInputErrorClass","toggleSaveButton","inputList","buttonElement","inactiveButtonClass","hasInvalidInput","disabled","validity","valid","PATH","AUTH_TOKEN","handleResponse","res","ok","json","Promise","reject","status","getUserData","fetch","method","headers","authorization","catch","err","console","log","userData","style","backgroundImage","avatar","nameDisplay","descriptionDisplay","about","nameInput","value","jobInput","cardsContainer","all","_ref","_ref2","cardsData","forEach","item","append","editPopup","addPopup","updateAvatarPopup","editButton","addButton","closePopupButtons","querySelectorAll","updateButton","formEditElement","forms","formAddElement","formUpdateAvatarElenemt","placeInput","urlCardInput","urlAvatarInput","clearValidation","inputSelector","submitButtonSelector","button","preventDefault","newName","newDescription","saveButton","setButtonState","body","JSON","stringify","data","cardTitle","cardImgUrl","prepend","reset","popupImage","popupCaption","imageSrc","imageAlt","preFillImagePopup","text","isDisabled","avatarUrl","newAvatarUrl","_ref3","formSelector","_ref4","Array","from","patternMismatch","setCustomValidity","dataset","validationMessage","isValidInput","setEventListeners","cards","card"],"sourceRoot":""}